<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="notice">

<!-- 공지글삭제 -->
<delete id="delete">
delete from notice where id = #{id}
</delete>

<!-- 공지답글등록 -->
<insert id="replyRegister">
insert into notice ( title, content, writer, filename, filepath, root, step, indent, rid)
values ( #{title}, #{content}, #{writer}, #{filename, jdbcType=VARCHAR}, #{filepath, jdbcType=VARCHAR}
		, #{root}, #{step}+1, #{indent}+1, #{rid} )
</insert>

<!-- 공지글등록 -->
<insert id="register">
insert into notice ( title, content, writer, filepath, filename)
values ( #{title}, #{content}, #{writer}
		, #{filepath, jdbcType=VARCHAR}, #{filename, jdbcType=VARCHAR})
</insert>

<!-- 조회수변경 -->
<update id="read">
update notice set readcnt = readcnt+1 
where id = #{id}
</update>

<!-- 공지글변경저장 -->
<update id="update">
update notice set title = #{title}, content = #{content}
				, filepath = #{filepath, jdbcType=VARCHAR}
				, filename = #{filename, jdbcType=VARCHAR}
where id = #{id}
</update>


<!-- 공지글 총 건수조회 -->
<select id="totalList" resultType="integer">
select count(*) from notice <include refid="searchWhere"/> 
</select>

<sql id="writer">
writer in ( select user_id from member where name like '%'|| #{keyword}  ||'%' ) 
</sql>

<sql id="searchWhere">
<choose>
	<when test=" search == 'all' ">
		where title like '%'|| #{keyword}  ||'%'
		   or content like '%'|| #{keyword}  ||'%'
		   or <include refid="writer"/>
<!-- 		   or writer in ( select user_id from member where name like '%'|| #{keyword}  ||'%' ) 		       -->
	</when>
	<when test=" search == 'title' or search =='content' ">
		where ${search} like '%'|| #{keyword}  ||'%'
	</when>
	<when test=" search == 'writer' ">
		where <include refid="writer"/>
<!-- 		where writer in ( select user_id from member where name like '%'|| #{keyword}  ||'%' ) -->
	</when>
</choose>
</sql>

<!-- 공지글목록조회 -->
<select id="list" resultType="notice">
select * from 
(select row_number() over(order by root, step desc) no,  name, n.* 
from notice n left outer join member m on n.writer = m.user_id
<include refid="searchWhere"/>
) n
where no between #{beginList} and #{endList}
order by no desc
<!--  
select row_number() over(order by id) no,  name, n.* 
from notice n left outer join member m on n.writer = m.user_id
order by no desc
-->
<!--  
select name, n.* 
from notice n left outer join member m on n.writer = m.user_id
order by id
-->
</select>


<!-- 공지글정보조회 -->
<select id="info" resultType="notice">
select name, n.* 
from notice n left outer join member m on n.writer = m.user_id
where id = #{id}
</select>

</mapper>